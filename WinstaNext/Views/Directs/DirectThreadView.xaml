<Page SizeChanged="Page_SizeChanged" NavigationCacheMode="Enabled"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:messagecontainer="using:WinstaNext.UI.Directs.MessageContainer"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:directs2="using:WinstaNext.UI.Flyouts.Directs"
      x:Class="WinstaNext.Views.Directs.DirectThreadView"
      xmlns:TemplateSelectors="using:TemplateSelectors"
      xmlns:models="using:Abstractions.Direct.Models" 
      xmlns:Converters="using:WinstaNext.Converters"
      xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
      xmlns:directs1="using:WinstaNext.UI.Directs"
      xmlns:Constants="using:WinstaCore.Constants"
      xmlns:Resources="using:Resources" 
      d:DesignHeight="300"
      d:DesignWidth="400"
      mc:Ignorable="d">

    <Page.Resources>
        <Converters:InvertBoolConverter x:Key="InvertBoolConverter"/>
        <Converters:NullToBooleanConverter IsInverted="True"
                                           x:Key="InvertedNullToBooleanConverter"/>
        
        <Thickness x:Key="MessageBubblePadding">8,6</Thickness>
        <Thickness x:Key="MessagesMargin">0,3</Thickness>

        <DataTemplate x:Key="AnimatedGifMessageDataTemplate" x:DataType="models:InstaDirectInboxItemFullModel">
            <messagecontainer:AnimatedGifMessageContainerUC 
                    DirectUser="{x:Bind User}"
                    DirectItem="{x:Bind}">
                <directs1:MessageContainerUC.ContextFlyout>
                    <directs2:DirectMessageItemMenuFlyout DirectItem="{x:Bind}"/>
                </directs1:MessageContainerUC.ContextFlyout>
            </messagecontainer:AnimatedGifMessageContainerUC>
        </DataTemplate>

        <DataTemplate x:Key="LikeMessageContainerUC" x:DataType="models:InstaDirectInboxItemFullModel">
            <messagecontainer:LikeMessageContainerUC 
                    DirectUser="{x:Bind User}"
                    DirectItem="{x:Bind}">
                <directs1:MessageContainerUC.ContextFlyout>
                    <directs2:DirectMessageItemMenuFlyout DirectItem="{x:Bind}"/>
                </directs1:MessageContainerUC.ContextFlyout>
            </messagecontainer:LikeMessageContainerUC>
        </DataTemplate>

        <DataTemplate x:Key="LinkMessageDataTemplate" x:DataType="models:InstaDirectInboxItemFullModel">
            <messagecontainer:LinkMessageContainerUC 
                    DirectUser="{x:Bind User}"
                    DirectItem="{x:Bind}">
                <directs1:MessageContainerUC.ContextFlyout>
                    <directs2:DirectMessageItemMenuFlyout DirectItem="{x:Bind}"/>
                </directs1:MessageContainerUC.ContextFlyout>
            </messagecontainer:LinkMessageContainerUC>
        </DataTemplate>
        
        <DataTemplate x:Key="MediaMessageDataTemplate" x:DataType="models:InstaDirectInboxItemFullModel">
            <messagecontainer:MediaMessageContainerUC 
                    DirectUser="{x:Bind User}"
                    DirectItem="{x:Bind}">
                <directs1:MessageContainerUC.ContextFlyout>
                    <directs2:DirectMessageItemMenuFlyout DirectItem="{x:Bind}"/>
                </directs1:MessageContainerUC.ContextFlyout>
            </messagecontainer:MediaMessageContainerUC>
        </DataTemplate>

        <DataTemplate x:Key="XmaMediaShareMessageDataTemplate" x:DataType="models:InstaDirectInboxItemFullModel">
            <messagecontainer:XmaMediaShareMessageContainerUC 
                    DirectUser="{x:Bind User}"
                    DirectItem="{x:Bind}">
                <directs1:MessageContainerUC.ContextFlyout>
                    <directs2:DirectMessageItemMenuFlyout DirectItem="{x:Bind}"/>
                </directs1:MessageContainerUC.ContextFlyout>
            </messagecontainer:XmaMediaShareMessageContainerUC>
        </DataTemplate>

        <DataTemplate x:Key="MediaShareMessageContainerUC" x:DataType="models:InstaDirectInboxItemFullModel">
            <messagecontainer:MediaShareMessageContainerUC 
                    DirectUser="{x:Bind User}"
                    DirectItem="{x:Bind}">
                <directs1:MessageContainerUC.ContextFlyout>
                    <directs2:DirectMessageItemMenuFlyout DirectItem="{x:Bind}"/>
                </directs1:MessageContainerUC.ContextFlyout>
            </messagecontainer:MediaShareMessageContainerUC>
        </DataTemplate>

        <DataTemplate x:Key="IGTVShareMessageContainerDataTemplate" x:DataType="models:InstaDirectInboxItemFullModel">
            <messagecontainer:IGTVShareMessageContainerUC 
                    DirectUser="{x:Bind User}"
                    DirectItem="{x:Bind}">
                <directs1:MessageContainerUC.ContextFlyout>
                    <directs2:DirectMessageItemMenuFlyout DirectItem="{x:Bind}"/>
                </directs1:MessageContainerUC.ContextFlyout>
            </messagecontainer:IGTVShareMessageContainerUC>
        </DataTemplate>
        
        <DataTemplate x:Key="ClipMessageContainerDataTemplate" x:DataType="models:InstaDirectInboxItemFullModel">
            <messagecontainer:ClipMessageContainerUC 
                    DirectUser="{x:Bind User}"
                    DirectItem="{x:Bind}">
                <directs1:MessageContainerUC.ContextFlyout>
                    <directs2:DirectMessageItemMenuFlyout DirectItem="{x:Bind}"/>
                </directs1:MessageContainerUC.ContextFlyout>
            </messagecontainer:ClipMessageContainerUC>
        </DataTemplate>

        <DataTemplate x:Key="StoryReplyDataTemplate" x:DataType="models:InstaDirectInboxItemFullModel">
            <messagecontainer:StoryReplyMessageContainerUC 
                    DirectUser="{x:Bind User}"
                    DirectItem="{x:Bind}">
                <directs1:MessageContainerUC.ContextFlyout>
                    <directs2:DirectMessageItemMenuFlyout DirectItem="{x:Bind}"/>
                </directs1:MessageContainerUC.ContextFlyout>
            </messagecontainer:StoryReplyMessageContainerUC>
        </DataTemplate>
        
        <DataTemplate x:Key="StoryShareDataTemplate" x:DataType="models:InstaDirectInboxItemFullModel">
            <messagecontainer:StoryShareMessageContainerUC 
                    DirectUser="{x:Bind User}"
                    DirectItem="{x:Bind}">
                <directs1:MessageContainerUC.ContextFlyout>
                    <directs2:DirectMessageItemMenuFlyout DirectItem="{x:Bind}"/>
                </directs1:MessageContainerUC.ContextFlyout>
            </messagecontainer:StoryShareMessageContainerUC>
        </DataTemplate>

        <DataTemplate x:Key="TextMessageDataTemplate" x:DataType="models:InstaDirectInboxItemFullModel">
            <messagecontainer:TextMessageContainerUC 
                    DirectUser="{x:Bind User}"
                    DirectItem="{x:Bind}">
                <directs1:MessageContainerUC.ContextFlyout>
                    <directs2:DirectMessageItemMenuFlyout DirectItem="{x:Bind}"/>
                </directs1:MessageContainerUC.ContextFlyout>
            </messagecontainer:TextMessageContainerUC>
        </DataTemplate>

        <DataTemplate x:Key="PlaceholderMessageDataTemplate" x:DataType="models:InstaDirectInboxItemFullModel">
            <messagecontainer:PlaceholderMessageContainerUC 
                    DirectUser="{x:Bind User}"
                    DirectItem="{x:Bind}">
                <directs1:MessageContainerUC.ContextFlyout>
                    <directs2:DirectMessageItemMenuFlyout DirectItem="{x:Bind}"/>
                </directs1:MessageContainerUC.ContextFlyout>
            </messagecontainer:PlaceholderMessageContainerUC>
        </DataTemplate>
        
        <DataTemplate x:Key="ProfileMessageDataTemplate" x:DataType="models:InstaDirectInboxItemFullModel">
            <messagecontainer:ProfileMessageContainerUC 
                    DirectUser="{x:Bind User}"
                    DirectItem="{x:Bind}">
                <directs1:MessageContainerUC.ContextFlyout>
                    <directs2:DirectMessageItemMenuFlyout DirectItem="{x:Bind}"/>
                </directs1:MessageContainerUC.ContextFlyout>
            </messagecontainer:ProfileMessageContainerUC>
        </DataTemplate>

        <DataTemplate x:Key="VoiceMessageDataTemplate" x:DataType="models:InstaDirectInboxItemFullModel">
            <messagecontainer:VoiceMessageContainerUC 
                    DirectUser="{x:Bind User}"
                    DirectItem="{x:Bind}">
                <directs1:MessageContainerUC.ContextFlyout>
                    <directs2:DirectMessageItemMenuFlyout DirectItem="{x:Bind}"/>
                </directs1:MessageContainerUC.ContextFlyout>
            </messagecontainer:VoiceMessageContainerUC>
        </DataTemplate>

        <DataTemplate x:Key="NotSupportedDataTemplate" x:DataType="models:InstaDirectInboxItemFullModel">
            <messagecontainer:NotSupportedMessageContainerUC 
                    DirectUser="{x:Bind User}"
                    DirectItem="{x:Bind}">
                <directs1:MessageContainerUC.ContextFlyout>
                    <directs2:DirectMessageItemMenuFlyout DirectItem="{x:Bind}"/>
                </directs1:MessageContainerUC.ContextFlyout>
            </messagecontainer:NotSupportedMessageContainerUC>
        </DataTemplate>

        <TemplateSelectors:InstaDirectInboxItemTemplateSelector x:Key="InstaDirectInboxItemTemplateSelector"
                           AnimatedGifMessageDataTemplate="{StaticResource AnimatedGifMessageDataTemplate}"
                           PlaceholderMessageDataTemplate="{StaticResource PlaceholderMessageDataTemplate}"
                           IGTVShareTemplate="{StaticResource IGTVShareMessageContainerDataTemplate}"
                           XmaMediaShareTemplate="{StaticResource XmaMediaShareMessageDataTemplate}"
                           ProfileMessageDataTemplate="{StaticResource ProfileMessageDataTemplate}"
                           VoiceMessageDataTemplate="{StaticResource VoiceMessageDataTemplate}"
                           NotSupportedMessageType="{StaticResource NotSupportedDataTemplate}"
                           LinkMessageDataTemplate="{StaticResource LinkMessageDataTemplate}"
                           MediaShareTemplate="{StaticResource MediaShareMessageContainerUC}"
                           TextMessageDataTemplate="{StaticResource TextMessageDataTemplate}"
                           ClipTemplate="{StaticResource ClipMessageContainerDataTemplate}"
                           StoryReplyDataTemplate="{StaticResource StoryReplyDataTemplate}"
                           StoryShareDataTemplate="{StaticResource StoryShareDataTemplate}"
                           MediaMessageType="{StaticResource MediaMessageDataTemplate}"
                           LikeTemplate="{StaticResource LikeMessageContainerUC}"/>
    </Page.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <directs1:ChatListView ItemTemplateSelector="{StaticResource InstaDirectInboxItemTemplateSelector}"
                               ItemsSource="{x:Bind ViewModel.ThreadItems, Mode=OneWay}"
                               IncrementalLoadingThreshold="1"
                               SelectionMode="None"
                               Padding="12,0"
                               x:Name="lst">

            <!-- The ItemsStackPanel must be edited to update the following two properties -->
            <!-- These properties allow the list to grow from the bottom -->
            <directs1:ChatListView.ItemsPanel>
                <ItemsPanelTemplate>
                    
                    <ItemsStackPanel VerticalAlignment="Bottom"
                                     ItemsUpdatingScrollMode="KeepLastItemInView"/>
                    
                </ItemsPanelTemplate>
            </directs1:ChatListView.ItemsPanel>

            <!-- This setter property is created so ListViewItems correctly align to the left or right. -->
            <directs1:ChatListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="IsFocusEngagementEnabled" Value="True"/>
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    <Setter Property="Margin" Value="{StaticResource MessagesMargin}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <!--Add double tap event to like-->
                                <Grid Background="#00000001">
                                    <ContentPresenter />
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </directs1:ChatListView.ItemContainerStyle>
        </directs1:ChatListView>

        <Button CommandParameter="{x:Bind lst, Mode=OneWay}" 
                Command="{x:Bind ViewModel.GoBottomCommand}"
                FontFamily="{StaticResource FluentIcons}"
                HorizontalAlignment="Right"
                VerticalAlignment="Bottom"
                Content="&#xE1FD;"
                CornerRadius="45"
                FontSize="16"
                Margin="0,12"
                Height="45"
                Width="45"/>

        <Grid Visibility="{x:Bind ViewModel.GifPanelVisibility, Mode=OneWay}"
              Grid.Row="1">
            <directs1:GiphyPanelUC DirectThread="{x:Bind DirectThread}"/>
        </Grid>
        
        <Grid Grid.Row="2" Margin="8,0,8,8">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <TextBox Text="{x:Bind ViewModel.MessageText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     PlaceholderText="{x:Bind Resources:LanguageManager.Instance.Instagram.MessagePlaceholder}"
                     AcceptsReturn="True"
                     x:Name="txtMessage"
                     Grid.Column="0">

                <TextBox.KeyboardAccelerators>

                    <KeyboardAccelerator
                            Key="Enter"
                            Modifiers="None"
                            Invoked="SendMessageKeyboardAccelerator_Invoked"/>

                </TextBox.KeyboardAccelerators>
            </TextBox>

            <muxc:TeachingTip x:Load="{x:Bind ViewModel.RepliedMessage, Converter={StaticResource InvertedNullToBooleanConverter}, Mode=OneWay}"
                              Subtitle="{x:Bind ViewModel.RepliedMessage.Text, Mode=OneWay}"
                              IsOpen="{x:Bind ViewModel.RepliedMessage, Converter={StaticResource InvertedNullToBooleanConverter}, Mode=OneWay}"
                              CloseButtonCommand="{x:Bind ViewModel.IgnoreReplyCommand}"
                              Target="{x:Bind txtMessage}"
                              PreferredPlacement="Top"
                              Title="Replying to..."
                              x:Name="replyTip">

                <muxc:TeachingTip.IconSource>
                    <muxc:FontIconSource Glyph="{x:Bind Constants:FluentRegularFontCharacters.Reply}"
                                         FontFamily="{StaticResource FluentSystemIconsRegular}"/>
                </muxc:TeachingTip.IconSource>
            </muxc:TeachingTip>

            <StackPanel Orientation="Horizontal"
                        Grid.Column="1"
                        Margin="8,0"
                        Spacing="3">

                <Button Content="{x:Bind Constants:FluentRegularFontCharacters.ArrowUpload}"
                        FontFamily="{StaticResource FluentSystemIconsRegular}">
                    <Button.Flyout>
                        <Flyout>
                            <StackPanel Orientation="Horizontal">
                                <Button Content="{x:Bind Constants:FluentRegularFontCharacters.Image}"
                                        FontFamily="{StaticResource FluentSystemIconsRegular}"
                                        Command="{x:Bind ViewModel.UploadImageCommand}"
                                        FontSize="24"/>
                                
                                <Button Content="{x:Bind Constants:FluentRegularFontCharacters.Camera}"
                                        Command="{x:Bind ViewModel.UploadCameraCapturedImageCommand}"
                                        FontFamily="{StaticResource FluentSystemIconsRegular}"
                                        FontSize="24"
                                        Margin="5,0"/>
                                
                                <Button Content="{x:Bind Constants:FluentRegularFontCharacters.Video}"
                                        FontFamily="{StaticResource FluentSystemIconsRegular}"
                                        Command="{x:Bind ViewModel.UploadVideoCommand}"
                                        FontSize="24"/>
                            </StackPanel>
                        </Flyout>
                    </Button.Flyout>
                </Button>

                <Button Command="{x:Bind ViewModel.GifPanelCommand}"
                        FontFamily="{StaticResource FluentIcons}" 
                        Content="&#xF4A9;"/>

                <Button CommandParameter="{x:Bind txtMessage, Mode=OneWay}" 
                        Command="{x:Bind ViewModel.OpenEmojisPanelCommand}"
                        FontFamily="{StaticResource FluentIcons}" 
                        Content="&#xE170;"
                        x:Name="emoBtn"/>
                
                <Button IsEnabled="{x:Bind ViewModel.SendLikeCommand.IsRunning, Converter={StaticResource InvertBoolConverter}, Mode=OneWay}"
                        Command="{x:Bind ViewModel.SendLikeCommand}"
                        FontFamily="{StaticResource FluentIcons}" 
                        Content="&#xE006;"/>

                <Button IsEnabled="{x:Bind ViewModel.SendMessageCommand.IsRunning, Converter={StaticResource InvertBoolConverter}, Mode=OneWay}"
                        Command="{x:Bind ViewModel.SendMessageCommand}"
                        FontFamily="{StaticResource FluentIcons}"
                        Content="&#xE724;"/>
                
            </StackPanel>
        </Grid>

    </Grid>
</Page>
